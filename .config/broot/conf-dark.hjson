###############################################################
# This configuration file lets you
# - define new commands
# - change the shortcut or triggering keys of built-in verbs
# - change the colors
# - set default values for flags
# - set special behaviors on specific paths
# - and more...
#
# Configuration documentation is available at
#     https://dystroy.org/broot
#
# This file's format is Hjson ( https://hjson.github.io/ ). Some
# properties are commented out. To enable them, remove the `#`.
#
###############################################################
{

    ###############################################################
    # Default flags
    # You can set up flags you want broot to start with by
    # default, for example `default_flags="ihp"` if you usually want
    # to see hidden and gitignored files and the permissions (then
    # if you don't want the hidden files you can launch `br -H`)
    # A popular flag is the `g` one which displays git related info.
    #
    # default_flags:

    ###############################################################
    # Date/Time format
    # If you want to change the format for date/time, uncomment the
    # following line and change it according to
    # https://docs.rs/chrono/0.4.11/chrono/format/strftime/index.html
    #
    # date_time_format: %Y/%m/%d %R

    ###############################################################
    # uncomment to activate modal mode
    #
    # (you really should read https://dystroy.org/broot/modal/
    # before as it may not suit everybody even among vim users)
    #
    # modal: true

    ###############################################################
    # Whether to mark the selected line with a triangle
    #
    show_selection_mark: true

    ###############################################################
    # Column order
    # cols_order, if specified, must be a permutation of the following
    # array. You should keep the name at the end as it has a variable
    # length.
    #
    # cols_order: [
    #     mark
    #     git
    #     size
    #     permission
    #     date
    #     count
    #     branch
    #     name
    # ]

    ###############################################################
    # True Colors
    # If this parameter isn't set, broot tries to automatically
    # determine whether true colors (24 bits) are available.
    # As this process is unreliable, you may uncomment this setting
    # and set it to false or true if you notice the colors in
    # previewed images are too off.
    #
    # true_colors: false

    ###############################################################
    # Icons
    # If you want to display icons in broot, uncomment this line
    # (see https://dystroy.org/broot/icons for installation and
    # troubleshooting)
    #
    # icon_theme: vscode

    ###############################################################
    # Special paths
    # If some paths must be handled specially, uncomment (and change
    # this section as per the examples)
    #
    # special_paths: {
    #     "/media/slow-backup-disk"    : no-enter
    #     "/home/dys/useless"    : hide
    #     "/home/dys/my-link-I-want-to-explore"    : enter
    # }

    ###############################################################
    # Quit on last cancel
    # You can usually cancel the last state change on escape.
    # If you want the escape key to quit broot when there's nothing
    # to cancel (for example when you just opened broot), uncomment
    # this parameter
    #
    # quit_on_last_cancel: true

    ###############################################################
    # Search modes
    #
    # broot allows many search modes.
    # A search mode is defined by
    # - the way to search: 'fuzzy', 'exact', 'regex', or 'tokens'.
    # - where to search: file 'name', 'path', or file 'content'
    # A search pattern may for example be "fuzzy path" (default),
    # "regex content" or "exact path".
    #
    # The search mode is selected from its prefix. For example, if
    # you type "abc", the default mode is "fuzzy path". If you type
    # "/abc", the mode is "regex path". If you type "rn/abc", the mode
    # is "regex name".
    #
    # This mapping may be modified. You may want to dedicate the
    # empty prefix (the one which doesn't need a '/') to the
    # search mode you use most often. The example below makes it
    # easy to search on name rather than on the subpath.
    #
    # More information on
    #  https://dystroy.org/broot/input/#the-filtering-pattern
    #
    # search_modes: {
    #     <empty>: fuzzy name
    #     /: regex name
    # }

    ###############################################################
    # Verbs and shortcuts
    # You can define your own commands which would be applied to
    # the selection.
    # You'll also find below verbs that you can customize or enable.
    verbs: [

    # Example 1: launching `tail -n` on the selected file (leaving broot)
    # {
    #     name: tail_lines
    #     invocation: tl {lines_count}
    #     execution: "tail -f -n {lines_count} {file}"
    # }

    # Example 2: creating a new file without leaving broot
    # {
    #     name: touch
    #     invocation: touch {new_file}
    #     execution: "touch {directory}/{new_file}"
    #     leave_broot: false
    # }

    # A standard recommended command for editing files, that you
    # can customize.
    # If $EDITOR isn't set on your computer, you should either set it using
    #  something similar to
    #   export EDITOR=nvim
    #  or just replace it with your editor of choice in the 'execution'
    #  pattern.
    #  If your editor is able to open a file on a specific line, use {line}
    #   so that you may jump directly at the right line from a preview.
    # Example:
    #  execution: nvim +{line} {file}
    {
        invocation: edit
        shortcut: e
        execution: "$EDITOR +{line} {file}"
        leave_broot: false
    }

    # A convenient shortcut to create new text files in
    # the current directory or below
    {
        invocation: create {subpath}
        execution: "$EDITOR {directory}/{subpath}"
        leave_broot: false
    }

    {
        invocation: git_diff
        shortcut: gd
        leave_broot: false
        execution: "git difftool -y {file}"
    }

    # On ctrl-b, propose the creation of a copy of the selection.
    # While this might occasionally be useful, this verb is mostly here
    # as an example to demonstrate rare standard groups like {file-stem}
    # and {file-dot-extension} and the auto_exec verb property which
    # allows verbs not executed until you hit enter
    {
        invocation: "backup {version}"
        key: ctrl-b
        leave_broot: false
        auto_exec: false
        execution: "cp -r {file} {parent}/{file-stem}-{version}{file-dot-extension}"
    }

    # This verb lets you launch a terminal on ctrl-T
    # (on exit you'll be back in broot)
    {
        invocation: terminal
        key: ctrl-t
        execution: "$SHELL"
        set_working_dir: true
        leave_broot: false
    }

    # Here's an example of a shortcut bringing you to your home directory
    # {
    #     invocation: home
    #     key: ctrl-home
    #     execution: ":focus ~"
    # }

    # A popular set of shortcuts for going up and down:
    #
    # {
    #     key: ctrl-k
    #     execution: ":line_up"
    # }
    # {
    #     key: ctrl-j
    #     execution: ":line_down"
    # }
    # {
    #     key: ctrl-u
    #     execution: ":page_up"
    # }
    # {
    #     key: ctrl-d
    #     execution: ":page_down"
    # }

    # If you develop using git, you might like to often switch
    # to the git status filter:
    # {
    #     key: ctrl-g
    #     execution: ":toggle_git_status"
    # }

    # You can reproduce the bindings of Norton Commander
    # on copying or moving to the other panel:
    # {
    #     key: F5
    #     external: "cp -r {file} {other-panel-directory}"
    #     leave_broot: false
    # }
    # {
    #     key: F6
    #     external: "mv {file} {other-panel-directory}"
    #     leave_broot: false
    # }
    ]

    ###############################################################
    # Skin
    # If you want to change the colors of broot,
    # uncomment the following bloc and start messing
    # with the various values.
    # A skin entry value is made of two parts separated with a '/':
    # The first one is the skin for the active panel.
    # The second one, optional, is the skin for non active panels.
    # You may find explanations and other skins on
    #  https://dystroy.org/broot/skins
    ###############################################################
    # If you only want to set the default color and a transparent
    # background, uncomment this simplified skin:
    # skin: {
    #     default: none none / gray(20) none
    # }
    #
    # Syntax theme for code preview
    syntax_theme: "Solarized (dark)"

    # Solarized light skin
    skin: {
        default: "rgb(131, 148, 150) rgb(0, 43, 54) / rgb(131, 148, 150) rgb(7, 54, 66)"  // base0 base03 / base01 base02
        tree: "rgb(88, 110, 117) none"                                                    // base01 default
        file: "none none"                                                                 // default default
        directory: "rgb(38, 139, 210) none bold"                                          // blue default bold
        exe: "rgb(211, 1, 2) none"                                                        // red default
        link: "rgb(211, 54, 130) none"                                                    // magenta default
        pruning: "rgb(88, 110, 117) none italic"                                          // base01 default italic
        perm__: "rgb(88, 110, 117) none"                                                  // base01 default
        perm_r: "none none"                                                               // default default
        perm_w: "none none"                                                               // default default
        perm_x: "none none"                                                               // default default
        owner: "rgb(88, 110, 117) none"                                                   // base01 default
        group: "rgb(88, 110, 117) none"                                                   // base01 default
        sparse: "none none"                                                               // default default
        git_branch: "rgb(147, 161, 161) none"                                             // base1 default
        git_insertions: "rgb(133, 153, 0) none"                                           // green default
        git_deletions: "rgb(211, 1, 2) none"                                              // red default
        git_status_current: "none none"                                                   // default default
        git_status_modified: "rgb(181, 137, 0) none"                                      // yellow default
        git_status_new: "rgb(133, 153, 0) none"                                           // green default
        git_status_ignored: "rgb(88, 110, 117) none"                                      // base01 default
        git_status_conflicted: "rgb(211, 1, 2) none"                                      // red default
        git_status_other: "rgb(211, 1, 2) none"                                           // red default
        selected_line: "none rgb(7, 54, 66)"                                              // default base02
        char_match: "rgb(133, 153, 0) none underlined"                                    // green default underlined
        file_error: "rgb(203, 75, 22) none italic"                                        // orange default italic
        flag_label: "none none"                                                           // default default
        flag_value: "rgb(181, 137, 0) none bold"                                          // yellow default bold
        input: "none none"                                                                // default default
        status_error: "rgb(203, 75, 22) rgb(7, 54, 66)"                                   // orange base02
        status_job: "rgb(108, 113, 196) rgb(7, 54, 66) bold"                              // violet base02 bold
        status_normal: "none rgb(7, 54, 66)"                                              // default base02
        status_italic: "rgb(181, 137, 0) rgb(7, 54, 66)"                                  // yellow base02
        status_bold: "rgb(147, 161, 161) rgb(7, 54, 66) bold"                             // base1 base02 bold
        status_code: "rgb(108, 113, 196) rgb(7, 54, 66)"                                  // violet base02
        status_ellipsis: "none rgb(7, 54, 66)"                                            // default base02
        scrollbar_track: "rgb(7, 54, 66) none"                                            // base02 default
        scrollbar_thumb: "none none"                                                      // default default
        help_paragraph: "none none"                                                       // default default
        help_bold: "rgb(147, 161, 161) none bold"                                         // base1 default bold
        help_italic: "rgb(147, 161, 161) none italic"                                     // base1 default italic
        help_code: "rgb(147, 161, 161) rgb(7, 54, 66)"                                    // base1 base02
        help_headers: "rgb(181, 137, 0) none"                                             // yellow default
        help_table_border: "none none"                                                    // default default
        preview_title: "gray(20) rgb(0, 43, 54)"
        staging_area_title: "gray(22) rgb(0, 43, 54)"
    }

    ###############################################################
    # File Extension Colors
    #
    # uncomment and modify the next section if you want to color
    # file name depending on their extension
    #
    # ext_colors: {
    #     png: rgb(255, 128, 75)
    #     rs: yellow
    # }


    ###############################################################
    # Max Panels Count
    #
    # Change this if you sometimes want to have more than 2 panels
    # open
    # max_panels_count: 2
}
