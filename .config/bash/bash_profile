# vi: ft=sh

##########################################################################################
################                Mac basic ENV exports             ########################
##########################################################################################

# Homebrew Path
export HOMEBREW_PATH="/usr/local"
if [ -r "/opt/homebrew" ]; then
    export HOMEBREW_PATH="/opt/homebrew"
fi
export PATH="$PATH:$HOMEBREW_PATH/bin"
export PATH="$PATH:$HOMEBREW_PATH/sbin"

# Completion
if [ -n "$BASH_VERSION" ]; then
  if [ -r "$HOMEBREW_PATH/etc/profile.d/bash_completion.sh" ]; then
      source "$HOMEBREW_PATH/etc/profile.d/bash_completion.sh"
  fi
fi

##########################################################################################
################            ENV exports of Packages and libs      ########################
##########################################################################################

# Asciidoc
export XML_CATALOG_FILES="$HOMEBREW_PATH/etc/xml/catalog:$XML_CATALOG_FILES"

# Bison
export PATH="$PATH:$HOMEBREW_PATH/opt/bison/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/bison/lib:$LDFLAGS"

# Broot
if [ -f "$HOME/.config/broot/launcher/bash/br" ]; then
    source $HOME/.config/broot/launcher/bash/br
fi

# Conda
# !! Contents within this block are managed by 'conda init' !!
if [ -n "$BASH_VERSION" ]; then
    __conda_setup="$('$HOMEBREW_PATH/Caskroom/miniconda/base/bin/conda' \
                     'shell.bash' 'hook' 2> /dev/null)"
elif [ -n "$ZSH_VERSION" ]; then
    __conda_setup="$('$HOMEBREW_PATH/Caskroom/miniconda/base/bin/conda' \
                     'shell.zsh' 'hook' 2> /dev/null)"
fi
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOMEBREW_PATH/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "$HOMEBREW_PATH/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="$PATH:$HOMEBREW_PATH/Caskroom/miniconda/base/bin"
    fi
fi
unset __conda_setup

# DocBook package in XML
export XML_CATALOG_FILES="$HOMEBREW_PATH/etc/xml/catalog:$XML_CATALOG_FILES"

# FFI
export LDFLAGS="-L$HOMEBREW_PATH/opt/libffi/lib:$LDFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/libffi/include:$CPPFLAGS"

# GCC linker warning fix
# ld: warning: text-based stub file /System/Library/Frameworks//Cocoa.framework/Cocoa.tbd
# and library file /System/Library/Frameworks//Cocoa.framework/Cocoa are out of sync.
export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)

# Gettext exports
export PATH="$PATH:$HOMEBREW_PATH/opt/gettext/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/gettext/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/gettext/include:$CPPFLAGS"

# GNU-getopt
export PATH="$PATH:$HOMEBREW_PATH/opt/gnu-getopt/bin"

# Gnutls
export GUILE_TLS_CERTIFICATE_DIRECTORY="$HOMEBREW_PATH/etc/gnutls"

# Go
export GOPATH="$HOME/.config/go"

# Guile
export GUILE_LOAD_PATH="$HOMEBREW_PATH/share/guile/site/3.0"
export GUILE_LOAD_COMPILED_PATH="$HOMEBREW_PATH/lib/guile/3.0/site-ccache"
export GUILE_SYSTEM_EXTENSIONS_PATH="$HOMEBREW_PATH/lib/guile/3.0/extensions"

# ICU4C
export PATH="$PATH:$HOMEBREW_PATH/opt/icu4c/bin"
export PATH="$PATH:$HOMEBREW_PATH/opt/icu4c/sbin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/icu4c/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/icu4c/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/icu4c/lib/pkgconfig:$PKG_CONFIG_PATH"

# Java
export PATH="$PATH:$HOMEBREW_PATH/opt/openjdk@11/bin"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/openjdk@11/include:$CPPFLAGS"

# Jekyll
export PATH="$PATH:$HOMEBREW_PATH/lib/ruby/gems/3.3.0/bin/"

# LibPcap
export PATH="$PATH:$HOMEBREW_PATH/opt/libpcap/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/libpcap/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/libpcap/include:$CPPFLAGS"

# Libxml2
export PATH="$PATH:$HOMEBREW_PATH/opt/libxml2/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/libxml2/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/libxml2/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/libxml2/lib/pkgconfig:$PKG_CONFIG_PATH"

# Ncurses
export PATH="$PATH:$HOMEBREW_PATH/opt/ncurses/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/ncurses/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/ncurses/include:$CPPFLAGS"

# Openssl
export PATH="$PATH:$HOMEBREW_PATH/opt/openssl/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/openssl/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/openssl/include:$CPPFLAGS"

# Openssl@1.1
export PATH="$PATH:$HOMEBREW_PATH/opt/openssl@1.1/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/openssl@1.1/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/openssl@1.1/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/openssl@1.1/lib/pkgconfig:$PKG_CONFIG_PATH"

# Python
export PYTHONPATH="$HOMEBREW_PATH/bin:$PYTHONPATH"
export PYTHONPATH="$HOMEBREW_PATH/etc:$PYTHONPATH"

# Qt
export PATH="$PATH:$HOMEBREW_PATH/opt/qt/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/qt/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/qt/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/qt/lib/pkgconfig:$PKG_CONFIG_PATH"

# Qt@5
export PATH="$PATH:$HOMEBREW_PATH/opt/qt@5/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/qt@5/lib"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/qt@5/include"

# Readline
export LDFLAGS="-L$HOMEBREW_PATH/opt/readline/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/readline/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/readline/lib/pkgconfig:$PKG_CONFIG_PATH"

# Ruby
export PATH="$PATH:$HOMEBREW_PATH/opt/ruby/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/ruby/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/ruby/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/ruby/lib/pkgconfig:$PKG_CONFIG_PATH"

# Rust
# Export ENV variables
export RUSTUP_HOME="$HOME/.config/rustup"
export CARGO_NAME="Ragu Manjegowda"
export CARGO_EMAIL="raghavendrahm0410@gmail.com"
export CARGO_HOME="$HOME/.config/cargo"
export PATH="$PATH:$CARGO_HOME/bin"

# Sphinx-doc
export PATH="$PATH:$HOMEBREW_PATH/opt/sphinx-doc/bin"

# Sqlite
export PATH="$PATH:$HOMEBREW_PATH/opt/sqlite/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/sqlite/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/sqlite/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/sqlite/lib/pkgconfig:$PKG_CONFIG_PATH"

# Tesseract
export TESSDATA_PREFIX="$HOMEBREW_PATH/Cellar/tesseract/4.1.1/share/tessdata"

# Tclap
export CPPFLAGS="-I$HOMEBREW_PATH/opt/tclap/include:$CPPFLAGS"
export PKG_CONFIG_PATH="$HOMEBREW_PATH/opt/tclap/lib/pkgconfig:$PKG_CONFIG_PATH"

# Tcl-tk
export PATH="$PATH:$HOMEBREW_PATH/opt/tcl-tk/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/tcl-tk/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/tcl-tk/include:$CPPFLAGS"

# Vtk
export PATH="$PATH:$HOMEBREW_PATH/opt/vtk@8.2/bin"
export LDFLAGS="-L$HOMEBREW_PATH/opt/vtk@8.2/lib:$LDFLAGS"
export CPPFLAGS="-I$HOMEBREW_PATH/opt/vtk@8.2/include:$CPPFLAGS"

# Zim fix (DYLD_FALLBACK_LIBRARY_PATH)
export DY_PATH="$HOMEBREW_PATH/Cellar/atk/2.36.0/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/Cellar/cairo/1.16.0_5/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/Cellar/gdk-pixbuf/2.42.2/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/Cellar/gobject-introspection/1.66.1_1/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/Cellar/gtk+3/3.24.26/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/Cellar/harfbuzz/2.7.4_1/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/Cellar/pango/1.48.4/lib"
export DY_PATH="$DY_PATH:$HOMEBREW_PATH/lib"

export DYLD_FALLBACK_LIBRARY_PATH="$DYLD_FALLBACK_LIBRARY_PATH:$DY_PATH"
export XDG_DATA_DIRS="$HOMEBREW_PATH/share:/usr/local/share:/usr/share:$XDG_DATA_DIRS"

if [ -f "$BASH_DIR/bash_extras" ]; then
    source "$BASH_DIR/bash_extras"
fi
