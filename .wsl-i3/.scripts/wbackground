#!/usr/bin/env python
from __future__ import division

import time
import os
import threading
import subprocess

from wand.image import Image
from watchdog.events import FileSystemEventHandler
from watchdog.observers import Observer

USERNAME = subprocess.check_output(['/mnt/c/Windows/System32/cmd.exe', '/C', 'echo %USERNAME%']).strip()
BACKGROUND = '/mnt/c/Users/%s/AppData/Roaming/Microsoft/Windows/Themes/Transcoded_001' % USERNAME
RESULT = '/home/ragu/.config/i3/background.png'
WIDTH = 1600
HEIGHT = 900-100
REAL_HEIGHT = 900

background_dir = os.path.dirname(BACKGROUND)
debounce = threading.Event()


class EventHandler(FileSystemEventHandler):
    def on_modified(self, event):
        if event.src_path == BACKGROUND:
            debounce.set()


def update_wallpaper():
    try:
        with Image(filename=BACKGROUND) as img:
           w, h = img.size
           print(w, h)
           scale = max(WIDTH / w, REAL_HEIGHT / h)
           print(scale)
           left = (w * scale - WIDTH) / 2
           top = 0#(h * scale - REAL_HEIGHT * 2 + HEIGHT) / 2
           print(left, top)
           img.resize(int(w * scale), int(h * scale))
           img.crop(left=int(left), top=int(top), width=WIDTH, height=HEIGHT)
           img.save(filename=RESULT)
        subprocess.call(['feh', '--bg-fill', RESULT])
    except:
        time.sleep(1)
        update_wallpaper()

def main():
    handler = EventHandler()
    observer = Observer()
    observer.schedule(handler, background_dir)
    observer.start()
    update_wallpaper()
    try:
        while True:
            while not debounce.wait(86400):
                pass
            debounce.clear()
            while debounce.wait(0.2):
                debounce.clear()
            update_wallpaper()
    except KeyboardInterrupt:
        observer.stop()
    observer.join()

if __name__ == '__main__':
    main()
